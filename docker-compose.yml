version: '2.2'
services:
  frontend:
    build: .
    init: true
    tty: true
    stdin_open: true
    ports:
      - 3000:3000
    volumes:
      - ./src:/usr/src/app/src
      - ./public:/usr/src/app/public
    environment:
      REACT_APP_KOMPASSI_BASE_URL: http://localhost:8000
  backend:
    build: ../kompassi
    init: true
    entrypoint: []
    command: scripts/wait-for-it.sh -t 60 postgres:5432 -- python manage.py docker_start
    ports:
      - 8000:8000
    links:
      - rabbitmq
      - postgres
      - memcache
    volumes:
      - ../kompassi:/usr/src/app
      - backend-media:/usr/src/app/media
    environment:
      PYTHONUNBUFFERED: 1
      DEBUG: 1
      DATABASE_URL: psql://kompassi:secret@postgres/kompassi
      BROKER_URL: amqp://guest:guest@rabbitmq/
      KOMPAQ_URL: amqp://guest:guest@rabbitmq/
      CACHE_URL: memcache://memcache
      ALLOWED_HOSTS: '*'
  celery:
    build: ../kompassi
    init: true
    entrypoint: []
    command: scripts/wait-for-it.sh -t 60 postgres:5432 -- celery -A kompassi.celery_app:app worker
    links:
      - rabbitmq
      - postgres
      - memcache
    volumes:
      - ../kompassi:/usr/src/app:ro
    environment:
      PYTHONUNBUFFERED: 1
      DEBUG: 1
      DATABASE_URL: psql://kompassi:secret@postgres/kompassi
      BROKER_URL: amqp://guest:guest@rabbitmq/
      KOMPAQ_URL: amqp://guest:guest@rabbitmq/
      CACHE_URL: memcache://memcache
  postgres:
    # image: postgres
    build: ../kompassi/kompassi/sql/
    init: true
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kompassi
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: kompassi
  rabbitmq:
    image: rabbitmq
    init: true
    ports:
      - 5672:5672
  memcache:
    image: memcached
    init: true

volumes:
  postgres-data: {}
  backend-media: {}
